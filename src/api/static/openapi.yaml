# example from here: https://dev.to/sanjan/how-to-add-swagger-ui-to-a-plain-flask-api-project-with-an-openapi-specification-file-1jl8
swagger: "2.0"
info:
  description: "API pour le projet de gestion financière du CBN Alpin. \nCode source  [https://github.com/cbn-alpin/gefiproj-api/](https://github.com/cbn-alpin/gefiproj-api/)."
  version: "0.1.5"
  title: "GEFIPROJ API"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "MIT License"
    url: "https://mit-license.org/"
tags:
  - name: "Authentification"
    description: "Gestion de l'autentification"
  - name: "Dépenses"
    description: "Gestion des dépenses"
  - name: "Projets"
    description: "Gestion des projets"
  - name: "Financements"
    description: "Gestion des financements"
  - name: "Recettes"
    description: "Gestion des Recettes"
  - name: "Utilisateurs"
    description: "Gestion des utilisateurs"
  - name: "Montants Affectés"
    description: "Gestion des montants affectés"
  - name: "Financeur"
    description: "Gestion des financeurs"
  - name: "Export"
    description: "Gestion des exports vers Google Sheet"
  - name: "Recettes Comptables"
    description: "Gestion des recettes comptables"
schemes:
  - "http"
  - "https"
paths:
  # authentication section
  /api/auth/login:
    post:
      tags:
        - "Authentification"
      summary: "Obtenir un jeton d'authentification"
      description: "Retourne un token de connexion permettant d'acceder aux ressouces protegées"
      operationId: "login"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Identifiants de l'utilisateur"
          required: true
          schema:
            $ref: "#/definitions/Login"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "Le login indiqué est introuvable"
        "200":
          description: "Connexion réussie"
          schema:
            $ref: "#/definitions/LoginResponse"

  /api/auth/logout:
    post:
      tags:
        - "Authentification"
      summary: "Se deconnecter"
      description: ""
      operationId: "logout"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - api_key: [ ]
      responses:
        "400":
          description: "Erreur inconnue lors de la déconnexion"
        "401":
          description: "Erreur d'authentification"
        "200":
          description: "Déconnection réussie"

  /api/auth/refresh:
    post:
      tags:
        - "Authentification"
      summary: "Obtenir un jeton nouveau d'authentification"
      description: "Retourne un nouveau token de connexion"
      operationId: "refreshToken"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      security:
        - api_key: [ ]
      responses:
        "401":
          description: "Erreur d'authentification"
        "200":
          description: "Nouveau token généré avec succès"
          schema:
            type: string
            example: { access_token: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDk2NzQ3MTQsIm5iZiI6MTYwOTY3NDcxNCwianRpI" }

  /api/auth/register:
    post:
      tags:
        - "Authentification"
      summary: "Enregistre un nouvel utilisateur"
      description: "Retourne le nouvel utilisateur créé"
      operationId: "registerUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Informations du nouvel utilisateur"
          required: true
          schema:
            $ref: "#/definitions/Utilisateur"
      security:
        - api_key: [ ]
      responses:
        "403":
          description: "Erreur d'authentification"
        "200":
          description: "Nouvel utilisateur créé avec succès"
          schema:
            $ref: "#/definitions/Utilisateur"

  # Dépenses
  /api/expenses:
    post:
      tags:
        - "Dépenses"
      summary: "Enregistre une nouvelle dépense"
      description: "Retourne la nouvelle dépense créee"
      operationId: "createExpense"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Informations de la nouvelle dépense"
          required: true
          schema:
            $ref: "#/definitions/Depense"
      security:
        - api_key: [ ]
      responses:
        "401":
          description: "Erreur d'authentification"
        "403":
          description: "L'année de la dépense doit être unique"
        "200":
          description: "Nouvelle dépense créée avec succès"
          schema:
            $ref: "#/definitions/Depense"
    get:
      tags:
        - "Dépenses"
      summary: "Récupérer les dépenses"
      description: "Retourne la liste des dépenses"
      operationId: "getAllExpenses"
      produces:
        - "application/json"
      responses:
        "401":
          description: "Erreur d'authentification"
        "200":
          description: "Retourne une liste des dépenses"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Depense"
      security:
        - api_key: [ ]
  /api/expenses/{expenseId}:
    put:
      tags:
        - "Dépenses"
      summary: "Mettre à jour une dépense"
      description: ""
      operationId: "updateExpense"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "expenseId"
          in: "path"
          description: "id de la dépense à mettre à jour"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Modifications à apporter au dépense"
          required: true
          schema:
            $ref: "#/definitions/Depense"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "La dépense est introuvable."
        "403":
          description: "L'année de la dépense doit être unique."
        "200":
          description: "Opération réussie"
          schema:
            $ref: "#/definitions/Depense"
        "422":
          description: "Erreur de validation des entrées"
      security:
        - api_key: [ ]
    delete:
      tags:
        - "Dépenses"
      summary: "Supprimer une dépense"
      description: ""
      operationId: "deleteExpense"
      produces:
        - "application/json"
      parameters:
        - name: "expenseId"
          in: "path"
          description: "id de la dépense à supprimer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "La dépense est introuvable."
        "204":
          description: "Opération réussie"
      security:
        - api_key: [ ]

  # Projet section
  /api/projects:
    post:
      tags:
        - "Projets"
      summary: "Ajouter un nouveau projet"
      description: ""
      operationId: "addProject"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Projet qui doit être ajouté"
          required: true
          schema:
            $ref: "#/definitions/Project"
      responses:
        "403":
          description: "Erreur d'authentification"
        "404":
          description: "Le responsaple indiqué est introuvable"
        "422":
          description: "Erreur de validation des entrées"
        "201":
          description: "Projet créé"
          schema:
            $ref: "#/definitions/Project"
      security:
        - api_key: [ ]

    get:
      tags:
        - "Projets"
      summary: "Récupérer tous les projets"
      description: ""
      operationId: "getAllProjects"
      produces:
        - "application/json"
      responses:
        "403":
          description: "Erreur d'authentification"
        "422":
          description: "Erreur de validation des entrées"
        "200":
          description: "Retourne une liste de projets"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
      security:
        - api_key: [ ]
  /api/projects/{projectId}:
    get:
      tags:
        - "Projets"
      summary: "Trouver un projet grâce à son identifiant"
      description: "Retourne un projet"
      operationId: "getProjectById"
      produces:
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "id du projet"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "403":
          description: "Erreur d'authentification"
        "200":
          description: "Retourne un projet"
          schema:
            $ref: "#/definitions/Project"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Projet introuvable"
      security:
        - api_key: [ ]
    put:
      tags:
        - "Projets"
      summary: "Mettre à jour un projet"
      description: ""
      operationId: "updateProjectWithFormData"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "id du projet"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Modifications à apporter au projet"
          required: true
          schema:
            $ref: "#/definitions/Project"
      responses:
        "403":
          description: "Erreur d'authentification"
        "200":
          description: "Opération réussie"
          schema:
            $ref: "#/definitions/Project"
        "404":
          description: "Projet introuvable"
      security:
        - api_key: [ ]
    delete:
      tags:
        - "Projets"
      summary: "Supprimer un projet"
      description: ""
      operationId: "deleteProject"
      produces:
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "id du projet à supprimer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "403":
          description: "Erreur d'authentification"
        "404":
          description: "Projet introuvable"
        "204":
          description: "Opération réussie"
      security:
        - api_key: [ ]

  # Financements
  /api/fundings:
    post:
      tags:
        - "Financements"
      summary: "Ajouter un nouveau financement"
      description: ""
      operationId: "addFunding"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Financement qui doit être ajouté"
          required: true
          schema:
            $ref: "#/definitions/Financement"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "Le projet indiqué est introuvable"
        "422":
          description: "Erreur de validation des entrées"
        "201":
          description: "Financement créé"
          schema:
            $ref: "#/definitions/Project"
      security:
        - api_key: [ ]
  /api/projects/{projectId}/fundings:
    get:
      tags:
        - "Financements"
      summary: "Récupérer les financements par projet"
      description: "Retourne la liste de financement par projet"
      operationId: "getFundingByProjectId"
      produces:
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "id du projet relié au financement"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "Le projet indiqué est introuvable"
        "200":
          description: "Retourne une liste de financements"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Financement"
      security:
        - api_key: [ ]
  /api/funders/{funderId}/fundings:
    get:
      tags:
        - "Financements"
      summary: "Récupérer les financements par financeur"
      description: "Retourne la liste de financement par financeur"
      operationId: "getFundingByFunderId"
      produces:
        - "application/json"
      parameters:
        - name: "funderId"
          in: "path"
          description: "id du financeur relié au financement"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "Le financeur indiqué est introuvable"
        "200":
          description: "Retourne une liste de financements"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Financement"
      security:
        - api_key: [ ]
  /api/fundings/{fundingId}:
    put:
      tags:
        - "Financements"
      summary: "Mettre à jour un financement"
      description: ""
      operationId: "updateFunding"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "fundingId"
          in: "path"
          description: "id du financement à mettre à jour"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Modifications à apporter au financement"
          required: true
          schema:
            $ref: "#/definitions/Financement"
      responses:
        "401":
          description: "Erreur d'authentification"
        "200":
          description: "Opération réussie"
          schema:
            $ref: "#/definitions/Financement"
        "404":
          description: "Projet introuvable"
        "422":
          description: "Erreur de validation des entrées"
      security:
        - api_key: [ ]
    delete:
      tags:
        - "Financements"
      summary: "Supprimer un financement"
      description: ""
      operationId: "deleteFunding"
      produces:
        - "application/json"
      parameters:
        - name: "fundingId"
          in: "path"
          description: "id du financement à supprimer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "Projet introuvable"
        "204":
          description: "Opération réussie"
      security:
        - api_key: [ ]

  # Recettes
  /api/receipts:
    post:
      tags:
        - "Recettes"
      summary: "Enregistre une nouvelle recette"
      description: "Retourne la recette créée"
      operationId: "createReceipt"
      security:
        - api_key: [ ]
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Informations de la nouvelle recette"
          required: true
          schema:
            $ref: "#/definitions/Recette"
      responses:
        "401":
          description: "Utilisateur non autorisé. Généralement un problème de token"
        "422":
          description: "Erreur de validation des entrées"
        "200":
          description: "Recette qui a été créée"
          schema:
            items:
              $ref: "#/definitions/Recette"
  /api/receipts/{receiptId}:
    put:
      tags:
        - "Recettes"
      summary: "Metre à jour une recette"
      description: "Retourne la recette mise à jour"
      operationId: "updateReceipt"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "receiptId"
          in: "path"
          description: "Identifiant de la recette à modifier"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Modifications à apporter à la recette"
          required: true
          schema:
            $ref: "#/definitions/Recette"
      responses:
        "200":
          description: "Opération réussie"
          schema:
            $ref: "#/definitions/Recette"
        "400":
          description: "Changement de financement détecté"
        "401":
          description: "Utilisateur non autorisé. Généralement un problème de token"
        "403":
          description: "Erreur d'authentification"
        "404":
          description: "Projet introuvable"
        "422":
          description: "Erreur de validation des entrées"
      security:
        - api_key: [ ]
    delete:
      tags:
        - "Recettes"
      summary: "Supprimer une recette"
      description: ""
      operationId: "deleteReceipt"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "receiptId"
          in: "path"
          description: "id de la recette à supprimer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "204":
          description: "Opération réussie"
        "400":
          description: "Le projet au quel la recette est associée est soldé"
        "401":
          description: "Utilisateur non autorisé. Généralement un problème de token"
        "403":
          description: "Erreur d'authentification"
        "404":
          description: "Recette introuvable"
      security:
        - api_key: [ ]

        # Utilisateurs section

  # Montants affectés
  /api/receipts/{receiptId}/amounts:
    get:
      tags:
        - "Montants Affectés"
      summary: "Récupérer les montants affectés par recette"
      description: "Retourne la liste des montants affectés par recette"
      operationId: "getAmountsByReceiptId"
      produces:
        - "application/json"
      parameters:
        - name: "receiptId"
          in: "path"
          description: "id de la recette"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "Le recette indiqué est introuvable"
        "200":
          description: "Retourne une liste des montants affectés par recette"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Montant_Affecte"
      security:
        - api_key: [ ]
  /api/amounts:
    post:
      tags:
        - "Montants Affectés"
      summary: "Ajouter un montant affecté"
      description: ""
      operationId: "addAmount"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Montant affecté qui doit être ajouté"
          required: true
          schema:
            $ref: "#/definitions/Montant_Affecte"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "Le recette indiqué est introuvable"
        "422":
          description: "Erreur de validation des entrées"
        "201":
          description: "Montant affecté créé"
          schema:
            $ref: "#/definitions/Montant_Affecte"
      security:
        - api_key: [ ]
  /api/amounts/{amountId}:
    put:
      tags:
        - "Montants Affectés"
      summary: "Mettre à jour un montant affecté"
      description: ""
      operationId: "updateAmount"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "amountId"
          in: "path"
          description: "id du montant affecté à mettre à jour"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Modifications à apporter au montant affecté"
          required: true
          schema:
            $ref: "#/definitions/Montant_Affecte"
      responses:
        "401":
          description: "Erreur d'authentification"
        "200":
          description: "Opération réussie"
          schema:
            $ref: "#/definitions/Montant_Affecte"
        "404":
          description: "Recette introuvable"
        "422":
          description: "Erreur de validation des entrées"
      security:
        - api_key: [ ]
    delete:
      tags:
        - "Montants Affectés"
      summary: "Supprimer un montant affecté"
      description: ""
      operationId: "deleteAmount"
      produces:
        - "application/json"
      parameters:
        - name: "amountId"
          in: "path"
          description: "id du montant affecté à supprimer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "Projet introuvable"
        "204":
          description: "Opération réussie"
      security:
        - api_key: [ ]
  
  # Utilisateurs
  /api/users:
    get:
      tags:
        - "Utilisateurs"
      summary: "Récupérer tous les utilisateurs"
      description: ""
      operationId: "getAllUsers"
      security:
        - api_key: [ ]
      produces:
        - "application/json"
      responses:
        "403":
          description: "Erreur d'authentification"
        "422":
          description: "Erreur de validation des entrées"
        "200":
          description: "Retourne une liste d'utilisateurs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Utilisateur"
  /api/users/{userId}:
    get:
      tags:
        - "Utilisateurs"
      summary: "Touver un utilisateur grâce à son identifiant"
      description: "Retourne un utilisateur"
      operationId: "getUserById"
      produces:
        - "application/json"
      security:
        - api_key: [ ]
      parameters:
        - name: "userId"
          in: "path"
          description: "id de l'utilisateur"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "403":
          description: "Erreur d'authentification"
        "200":
          description: "Retourne un utilisateur"
          schema:
            $ref: "#/definitions/Utilisateur"
        "404":
          description: "Projet introuvable"

  /api/users/{userId}/change-password:
    post:
      tags:
        - "Utilisateurs"
      summary: "Changer le mot de passe d'un utilisateur"
      description: "Retourne un message de réussite"
      operationId: "changeUserPassword"
      produces:
        - "application/json"
      security:
        - api_key: [ ]
      parameters:
        - name: "userId"
          in: "path"
          description: "id de l'utilisateur"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "password"
          required: true
          schema:
            properties:
              password:
                type: string
                description: "Ancien mot de passe. Inutile si administrateur"
              new_password:
                type: string
                description: "Nouveau mot de passe"
      responses:
        "200":
          description: "Mot de passe changé"
          schema:
            properties:
              message:
                type: string
        "403":
          description: "Erreur d'authentification"
        "404":
          description: "Utilisateur introuvable"
        "500":
          description: "Erreur serveur"

        # Financeur
  /api/funders:
    get:
      tags:
        - "Financeur"
      summary: "Récupérer les financeurs"
      description: "Retourne la liste des financeurs"
      operationId: "getAllFunders"
      produces:
        - "application/json"
      responses:
        "403":
          description: "Erreur d'authentification"
        "200":
          description: "Retourne une liste des financeurs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Financeur"
      security:
        - api_key: [ ]
    post:
      tags:
        - "Financeur"
      summary: "Ajouter un financeur"
      description: ""
      operationId: "addFunder"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Financeur qui doit être ajouté"
          required: true
          schema:
            $ref: "#/definitions/Financeur"
      responses:
        "403":
          description: "Erreur d'authentification"
        "422":
          description: "Erreur de validation des entrées"
        "201":
          description: "Financeur créé"
          schema:
            $ref: "#/definitions/Financeur"
      security:
        - api_key: [ ]
  /api/funders/{funderId}:
    put:
      tags:
        - "Financeur"
      summary: "Mettre à jour un financeur"
      description: ""
      operationId: "updateFunder"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "funderId"
          in: "path"
          description: "id du financeur à mettre à jour"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Modifications à apporter au financeur"
          required: true
          schema:
            $ref: "#/definitions/Financeur"
      responses:
        "403":
          description: "Erreur d'authentification"
        "200":
          description: "Opération réussie"
          schema:
            $ref: "#/definitions/Financeur"
        "422":
          description: "Erreur de validation des entrées"
      security:
        - api_key: [ ]
    delete:
      tags:
        - "Financeur"
      summary: "Supprimer un financeur"
      description: ""
      operationId: "deleteFunder"
      produces:
        - "application/json"
      parameters:
        - name: "funderId"
          in: "path"
          description: "id du financeur à supprimer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "403":
          description: "Erreur d'authentification"
        "404":
          description: "Financeur introuvable"
        "204":
          description: "Opération réussie"
      security:
        - api_key: [ ]

  # Export section
  /api/export/fundings:
    post:
      tags:
        - "Export"
      summary: "Exporter les financements dans un tableur Google"
      description: "Retourne le lien du document créé et les personnes avec qui il est partagé"
      operationId: "exportFundings"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: ""
          required: true
          schema:
            $ref: "#/definitions/ExportParams"
      security:
        - api_key: [ ]
      responses:
        "200":
          description: "Export réussi"
          schema:
            properties:
              message:
                type: string
              version:
                type: string
                description: version utilisée pour la génération du bilan
              title:
                type: string
                description: titre du document créé
              url:
                type: string
                description: url du document créé
              shares:
                type: object
                description: personnes avec qui le document a été partagé
              lines:
                type: integer
                description: nombre de lignes exportées
        "401":
          description: "Erreur d'authentification"
        "422":
          description: "Erreur de validation des entrées"
        "500":
          description: "Erreur survenue lors de la création du document google sheet"

  /api/export/receipts:
    post:
      tags:
        - "Export"
      summary: "Exporter le bilan financier dans un tableur Google"
      description: "Retourne le lien du document créé et les personnes avec qui il est partagé"
      operationId: "exportReceipts"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: ""
          required: true
          schema:
            properties:
              annee_ref:
                type: integer
                description: Année de reference
                example: 2020
              nom_fichier:
                type: string
                description: "Nom du fichier exporté. Optionnel"
                example: ""
              partages:
                type: array
                description: "Tableau de personnes avec qui partager le document créé. Paramètre optionnel"
                items:
                  properties:
                    email:
                      type: string
                      description: email de l'utilisateur
                    type:
                      type: string
                      description: type de partage
                      example: user
                    permission:
                      type: string
                      description: permission de l'utisateur sur le document
                      example: writer
      security:
        - api_key: [ ]
      responses:
        "200":
          description: "Export réussi"
          schema:
            properties:
              message:
                type: string
              title:
                type: string
                description: titre du document créé
              url:
                type: string
                description: url du document créé
              shares:
                type: object
                description: personnes avec qui le document a été partagé
              lines:
                type: integer
                description: nombre de lignes exportées
        "401":
          description: "Erreur d'authentification"
        "422":
          description: "Erreur de validation des entrées"
        "500":
          description: "Erreur survenue lors de la création du document google sheet"

  # Recette Comptable
  /api/receipts/accountings:
    post:
      tags:
        - "Recettes Comptables"
      summary: "Enregistre une nouvelle recette comptable"
      description: "Retourne la nouvelle recette comptable créee"
      operationId: "createReceiptAccounting"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Informations de la nouvelle recette comptable"
          required: true
          schema:
            $ref: "#/definitions/Recette_Comptable"
      security:
        - api_key: [ ]
      responses:
        "401":
          description: "Erreur d'authentification"
        "403":
          description: "L'année de la recette comptable doit être unique"
        "200":
          description: "Nouvelle recette comptable créée avec succès"
          schema:
            $ref: "#/definitions/Recette_Comptable"
    get:
      tags:
        - "Recettes Comptables"
      summary: "Récupérer les recettes comptables"
      description: "Retourne la liste des recettes comptables"
      operationId: "getAllReceiptsAccountings"
      produces:
        - "application/json"
      responses:
        "401":
          description: "Erreur d'authentification"
        "200":
          description: "Retourne une liste des recettes comptables"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Recette_Comptable"
      security:
        - api_key: [ ]
  /api/receipts/accountings/{receiptAccountingId}:
    put:
      tags:
        - "Recettes Comptables"
      summary: "Mettre à jour une recette comptable"
      description: ""
      operationId: "updateReceiptAccounting"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "receiptAccountingId"
          in: "path"
          description: "id de la recette comptable à mettre à jour"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Modifications à apporter au recette comptable"
          required: true
          schema:
            $ref: "#/definitions/Recette_Comptable"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "La recette comptable est introuvable."
        "403":
          description: "L'année de la recette comptable doit être unique."
        "200":
          description: "Opération réussie"
          schema:
            $ref: "#/definitions/Recette_Comptable"
        "422":
          description: "Erreur de validation des entrées"
      security:
        - api_key: [ ]
    delete:
      tags:
        - "Recettes Comptables"
      summary: "Supprimer une recette comptable"
      description: ""
      operationId: "deleteReceiptAccounting"
      produces:
        - "application/json"
      parameters:
        - name: "receiptAccountingId"
          in: "path"
          description: "id de la recette comptable à supprimer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "401":
          description: "Erreur d'authentification"
        "404":
          description: "La recette comptable est introuvable."
        "204":
          description: "Opération réussie"
      security:
        - api_key: [ ]

securityDefinitions:
  api_key:
    type: apiKey
    name: "Authorization"
    in: header
definitions:
  Project:
    type: "object"
    required:
      - "id_u"
      - "code_p"
      - "nom_p"
      - "statut_p"
    properties:
      id_p:
        type: "integer"
        format: "int64"
        description: "id du projet"
        example: 1
      id_u:
        type: "integer"
        format: "int64"
        example: 1
        description: "reference du responsable de projet"
      code_p:
        type: "string"
        example: "CA3"
      nom_p:
        type: "string"
        example: "Un nom de projet"
      statut_p:
        type: "boolean"
  Financement:
    type: "object"
    required:
      - "id_p"
      - "id_financeur"
      - "montant_arrete_f"
      - "statut_f"
    properties:
      id_f:
        type: "integer"
        format: "int64"
        description: "id du financement"
        example: 1
      id_p:
        type: "integer"
        format: "int64"
        description: "reference du projet"
        example: 1
      id_financeur:
        type: "integer"
        format: "int64"
        example: 1
        description: "reference du financeur du projet"
      montant_arrete_f:
        type: "number"
        example: 200.40
        description: "montant arrêté du financement"
      statut_f:
        type: "string"
        enum: ["SOLDE", "ANTR", "ATR"]
        description: "statut du financement"
      date_solde_f:
        type: string
        format: date
        example: "2012-02-13"
        description: "date de solde du financement"
      date_arrete_f:
        type: string
        format: date
        example: "2012-02-13"
        description: "date d'arrêté du financement"
      date_limite_solde_f:
        type: string
        format: date
        example: "2012-02-13"
        description: "date limite de solde du financement"
      commentaire_admin_f:
        type: "string"
        description: "Un commentaire dédié au administrateur"
      commentaire_resp_f:
        type: "string"
        description: "Un commentaire dédié au responsable de projet"
      numero_titre_f:
        type: "string"
        description: "le numéro du titre du financement"
      annee_titre_f:
        type: "string"
        format: date
        example: "2012"
        description: "le numéro du titre du financement"
      imputation_f:
        type: "string"
        description: "l'imputation du financement"
  Login:
    type: object
    required:
      - "login"
      - "password"
    properties:
      login:
        type: string
        description: "Email de connexion de l'utilisateur"
        example: "testimail@mail.com"
      password:
        type: string
        description: "Email de connexion de l'utilisateur"
        example: "super mot de passe"
  LoginResponse:
    type: object
    properties:
      access_token:
        type: string
        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDk2NzQ3MTQsIm5iZiI6MTYwOTY3NDcxNCwianRpI"
        description: "Token d'accès aux ressources"
      refresh_token:
        type: string
        example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDk2NzQ3MTQsIm5iZiI6MTYwOTY3NDcxNCwianRpI"
        description: "Token de rafraissement"
      active_u:
        type: boolean
        example: true
        description: "Status de l'utilisateur"
      email_u:
        type: string
        example: "testimail@mail.com"
        description: "email de l'utilisateur"
      nom_u:
        type: string
        example: "Sanou"
        description: "Nom de l'utilisateur"
      prenom_u:
        type: string
        example: "Madou"
        description: "Prenom de l'utilisateur"
      initiales_u:
        type: string
        description: "Initiales de l'utilisateur"
      roles:
        example: [ "administrateur", "Consultant" ]
        description: "Tableau des rôles de l'utilisateur"
  Recette:
    type: object
    properties:
      id_r:
        type: integer
        description: Identifiant de la recette
        example: 5
      id_f:
        type: integer
        description: Identifiant du financement associé
        example: 8
      annee_r:
        type: integer
        description: Année de la recette
        example: 2021
      montant_r:
        type: number
        description: Montant de la recette
        example: 2357.79
    required:
      - "annee_r"
      - "montant_r"
      - "id_f"
  Montant_Affecte:
    type: object
    properties:
      id_ma:
        type: integer
        description: Identifiant du montant affecté
        example: 5
      id_r:
        type: integer
        description: Identifiant du recette associé
        example: 8
      annee_ma:
        type: integer
        description: Année du montant affecté
        example: 2021
      montant_ma:
        type: number
        description: Montant du montant affecté
        example: 2357.79
    required:
      - "annee_ma"
      - "montant_ma"
      - "id_r"
  Utilisateur:
    type: object
    required:
      - "nom_u"
      - "prenom_u"
      - "initiales_u"
      - "email_u"
      - "active_u"
    properties:
      nom_u:
        type: string
        description: "Nom de l'utilisateur"
        example: "Dupont"
      prenom_u:
        type: string
        description: "Prenom de l'utilisateur"
        example: "Yatimè"
      email_u:
        type: string
        description: "Email de l'utilisateur"
        example: "testimail@mail.ml"
      initiales_u:
        type: string
        description: "Initiales de l'utilisateur"
        example: "YDU"
      password_u:
        type: string
        description: "Mot de passe de l'utilisateur"
        example: "super mot de passe"
      active_u:
        type: boolean
        description: "Indique si l'utilisateur est actif"
        example: false
  Depense:
    type: object
    required:
      - "annee_d"
      - "montant_d"
    properties:
      id_d:
        type: integer
        description: "Identifiant de la dépense"
        example: 2
      annee_d:
        type: integer
        description: "Année de la dépense: Elle doit être unique."
        example: 2019
      montant_d:
        type: number
        description: "Montant de la dépense"
        example: 3793.67
  Financeur:
    type: object
    properties:
      id_financeur:
        type: integer
        description: Identifiant du financeur
        example: 5
      nom_financeur:
        type: string
        description: "Nom du financeur: Elle doit être unique."
      ref_arret_attributif_financeur:
        type: string
        description: référence arrêté attributif du financeur
    required:
      - "nom_financeur"
  Recette_Comptable:
    type: object
    properties:
      id_rc:
        type: integer
        description: Identifiant de la recette comptable
        example: 5
      annee_rc:
        type: integer
        description: "Année de la recette comptable: Elle doit être unique."
        example: 2019
      montant_rc:
        type: number
        description: "Montant de la recette comptable"
        example: 3793.67
    required:
      - "annee_rc"
      - "montant_rc"
  ExportParams:
    type: object
    properties:
      version:
        type: integer
        description: Version de l'export - 1 ou 2
        example: 1
      annee_ref:
        type: integer
        description: Année de reference
        example: 2020
      annee_max:
        type: integer
        description: Année maximale à considerer. Disponible avec la version 2
        example: 2023
      nom_fichier:
        type: string
        description: "Nom du fichier exporté. Optionnel"
        example: ""
      partages:
        type: array
        description: "Tableau de personnes avec qui partager le document créé. Paramètre optionnel"
        items:
          properties:
            email:
              type: string
              description: email de l'utilisateur
            type:
              type: string
              description: type de partage
              example: user
            permission:
              type: string
              description: permission de l'utisateur sur le document
              example: writer
      entete:
        type: array
        items:
          type: string
        example: [ "Projet", "Nom projet", etc ]
    required:
      - "version"
      - "annee_ref"
