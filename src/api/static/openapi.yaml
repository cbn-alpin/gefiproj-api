# example from here: https://dev.to/sanjan/how-to-add-swagger-ui-to-a-plain-flask-api-project-with-an-openapi-specification-file-1jl8
swagger: "2.0"
info:
  description: "API pour le projet de gestion financière du CBN Alpin. \nCode source  [https://github.com/cbn-alpin/gefiproj-api/](https://github.com/cbn-alpin/gefiproj-api/)."
  version: "1.0.0"
  title: "GEFIPROJ API"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "MIT License"
    url: "https://mit-license.org/"
tags:
  - name: "Projets"
    description: "Gestion des projets"
  - name: "Financements"
    description: "Gestion des financements"
  - name: "Utilisateurs"
    description: "Gestion des utilisateurs"
schemes:
  - "https"
  - "http"
paths:
  /api/projects:
    post:
      tags:
        - "Projets"
      summary: "Ajouter un nouveau projet"
      description: ""
      operationId: "addProject"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Projet qui doit être ajouté"
          required: true
          schema:
            $ref: "#/definitions/Project"
      responses:
        "403":
          description: "Erreur d'authentification"
        "404":
          description: "Le responsaple indiqué est introuvable"
        "422":
          description: "Erreur de validation des entrées"
        "201":
          description: "Projet créé"
          schema:
            $ref: "#/definitions/Project"
      security:
        - api_key: [ ]

    get:
      tags:
        - "Projets"
      summary: "Récupérer tous les projets"
      description: ""
      operationId: "getAllProjects"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "403":
          description: "Erreur d'authentification"
        "422":
          description: "Erreur de validation des entrées"
        "200":
          description: "Retourne une liste de projets"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Project"
      security:
        - api_key: [ ]


  /api/projects/{projectId}:
    get:
      tags:
        - "Projets"
      summary: "Trouver un projet grâce à son identifiant"
      description: "Retourne un projet"
      operationId: "getProjectById"
      produces:
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "id du projet"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "403":
          description: "Erreur d'authentification"
        "200":
          description: "Retourne un projet"
          schema:
            $ref: "#/definitions/Project"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Projet introuvable"
      security:
        - api_key: [ ]

    put:
      tags:
        - "Projets"
      summary: "Mettre à jour un projet"
      description: ""
      operationId: "updateProjectWithFormData"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "id du projet"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Modifications à apporter au projet"
          required: true
          schema:
            $ref: "#/definitions/Project"
      responses:
        "403":
          description: "Erreur d'authentification"
        "200":
          description: "Opération réussie"
          schema:
            $ref: "#/definitions/Project"
        "404":
          description: "Projet introuvable"
      security:
        - api_key: [ ]

    delete:
      tags:
        - "Projets"
      summary: "Supprimer un projet"
      description: ""
      operationId: "deleteProject"
      produces:
        - "application/json"
      parameters:
        - name: "projectId"
          in: "path"
          description: "id du projet à supprimer"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "403":
          description: "Erreur d'authentification"
        "404":
          description: "Projet introuvable"
        "204":
          description: "Opération réussie"
      security:
        - api_key: [ ]


securityDefinitions:
  api_key:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  Project:
    type: "object"
    required:
      - "id_u"
      - "code_p"
      - "nom_p"
      - "statut_p"
    properties:
      id_p:
        type: "integer"
        format: "int64"
        description: "id du projet"
        example: 1
      id_u:
        type: "integer"
        format: "int64"
        example: 1
        description: "reference du responsable de projet"
      code_p:
        type: "string"
        example: "CA3"
      nom_p:
        type: "string"
        example: "Un nom de projet"
      statut_p:
        type: "boolean"
